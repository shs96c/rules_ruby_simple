#!/usr/bin/env bash

# Script generated by ruby_binary. Do not edit by hand

# Portions of this script lifted from Bazel's java_stub_template.txt

set -o posix

OSTYPE="$(uname -s | tr '[:upper:]' '[:lower:]')"

# Windows
function is_windows() {
  [[ "${OSTYPE}" =~ msys* ]] || [[ "${OSTYPE}" =~ cygwin* ]]
}

# If we are running on Windows, convert the windows style path
# to unix style for detecting runfiles path.
if is_windows; then
  self=$(cygpath --unix "$0")
else
  self="$0"
fi

if [[ "$self" != /* ]]; then
  self="$PWD/$self"
fi

while true; do
  if [[ -e "$self.runfiles" ]]; then
    RUNFILES="$self.runfiles"
    break
  fi
  if [[ $self == *.runfiles/* ]]; then
    RUNFILES="${self%.runfiles/*}.runfiles"
    break
  fi
  if [[ ! -L "$self" ]]; then
    break
  fi
  readlink="$(readlink "$self")"
  if [[ "$readlink" = /* ]]; then
    self="$readlink"
  else
    # resolve relative symlink
    self="${self%/*}/$readlink"
  fi
done

if [[ -z "$RUNFILES" ]]; then
  echo 'Cannot locate runfiles directory.'
  exit 1
fi

set -eufo pipefail

# Redirect through a shell so we can set up the environment properly
unset GEM_PATH
unset GEM_HOME

EXTRA_FLAGS=()
for PATH in {load_path}; do
    EXTRA_FLAGS+=("-I${RUNFILES}/{workspace}/${PATH}")
done

#echo RUNFILES="${RUNFILES}" "${RUNFILES}/{workspace}/{interpreter}" ${EXTRA_FLAGS[*]} "${RUNFILES}/{workspace}/{bin}" {args}
"${RUNFILES}/{workspace}/{interpreter}" ${EXTRA_FLAGS[*]} "${RUNFILES}/{workspace}/{bin}" {args}